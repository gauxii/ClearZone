{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Merin Varghese\\\\Desktop\\\\clearzone\\\\ClearZone\\\\frontend\\\\src\\\\components\\\\WorkerUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./WorkerUpload.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WorkerUpload() {\n  _s();\n  const [image, setImage] = useState(null);\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n  const [taskAccepted, setTaskAccepted] = useState(false);\n  useEffect(() => {\n    // Check if a task has been accepted\n    const acceptedTasks = JSON.parse(localStorage.getItem(\"acceptedTasks\")) || [];\n    if (acceptedTasks.length > 0) {\n      setTaskAccepted(true);\n    } else {\n      alert(\"You must accept a task before uploading an image.\");\n      navigate(\"/worker-dashboard\"); // Redirect back to dashboard if no task is accepted\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (taskAccepted) {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        videoRef.current.srcObject = stream;\n      }).catch(error => {\n        console.error(\"Error accessing camera:\", error);\n      });\n    }\n    return () => {\n      var _videoRef$current;\n      const stream = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.srcObject;\n      if (stream) {\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, [taskAccepted]);\n  const captureImage = () => {\n    const canvas = document.createElement(\"canvas\");\n    const video = videoRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const imageUrl = canvas.toDataURL(\"image/png\");\n    setImage(imageUrl);\n    alert(\"Image Captured! Notification sent to Admin.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"worker-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Cleaned Area Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), taskAccepted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        className: \"video-feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureImage,\n        children: \"Capture Cleared Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Captured Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Cleared Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please accept a task first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkerUpload, \"ckzdFUTra0vT4cW1iqgW52dfPF0=\", false, function () {\n  return [useNavigate];\n});\n_c = WorkerUpload;\nexport default WorkerUpload;\nvar _c;\n$RefreshReg$(_c, \"WorkerUpload\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkerUpload","_s","image","setImage","videoRef","navigate","taskAccepted","setTaskAccepted","acceptedTasks","JSON","parse","localStorage","getItem","length","alert","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","error","console","_videoRef$current","tracks","getTracks","forEach","track","stop","captureImage","canvas","document","createElement","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","imageUrl","toDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Merin Varghese/Desktop/clearzone/ClearZone/frontend/src/components/WorkerUpload.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./WorkerUpload.css\";\r\n\r\nfunction WorkerUpload() {\r\n  const [image, setImage] = useState(null);\r\n  const videoRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [taskAccepted, setTaskAccepted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if a task has been accepted\r\n    const acceptedTasks = JSON.parse(localStorage.getItem(\"acceptedTasks\")) || [];\r\n    if (acceptedTasks.length > 0) {\r\n      setTaskAccepted(true);\r\n    } else {\r\n      alert(\"You must accept a task before uploading an image.\");\r\n      navigate(\"/worker-dashboard\"); // Redirect back to dashboard if no task is accepted\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    if (taskAccepted) {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then((stream) => {\r\n          videoRef.current.srcObject = stream;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error accessing camera:\", error);\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      const stream = videoRef.current?.srcObject;\r\n      if (stream) {\r\n        const tracks = stream.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, [taskAccepted]);\r\n\r\n  const captureImage = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const video = videoRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    const imageUrl = canvas.toDataURL(\"image/png\");\r\n    setImage(imageUrl);\r\n\r\n    alert(\"Image Captured! Notification sent to Admin.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"worker-upload-container\">\r\n      <h2>Upload Cleaned Area Image</h2>\r\n\r\n      {taskAccepted ? (\r\n        <>\r\n          <video ref={videoRef} autoPlay playsInline className=\"video-feed\" />\r\n          <button onClick={captureImage}>Capture Cleared Image</button>\r\n\r\n          {image && (\r\n            <div className=\"image-preview\">\r\n              <h3>Captured Image:</h3>\r\n              <img src={image} alt=\"Cleared Area\" />\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Please accept a task first.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkerUpload;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}